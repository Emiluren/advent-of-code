fn main() {
    let input: Vec<Vec<bool>> = [
        [1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0],
        [0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1],
        [0,1,1,1,0,1,0,1,0,1,1,1,1,1,0,1,1,0,0,1,1],
        [1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1],
        [1,1,1,0,0,0,1,0,1,1,1,1,0,1,0,1,0,1,1,1,1],
        [1,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0],
        [1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0],
        [0,1,0,0,1,0,1,0,0,1,1,1,0,0,0,1,1,1,1,0,1],
        [1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,0,0,1,1],
        [1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0],
        [1,1,1,1,1,1,0,1,1,1,0,1,0,1,0,1,1,0,0,0,1],
        [1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,1,1,1,0,1,0],
        [0,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1],
        [1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1,0,1],
        [1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,0,1,0,0,0,0],
        [1,1,1,0,1,1,0,1,1,0,0,1,1,0,1,1,1,1,1,0,1],
        [1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1],
        [0,1,1,0,0,0,0,1,1,0,0,1,1,1,0,1,0,0,0,1,0],
        [1,0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1],
        [0,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1],
        [0,0,1,1,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1],
    ].iter().map(
        |row| row.iter().map(|i| *i == 1).collect()
    ).collect();

    let mut max_asteroids = 0;
    for row in 0..input.len() {
        for col in 0..input[0].len() {
            if !input[row][col] {
                continue;
            }

            let mut visible_asteroids = input.clone();

            for r in 0..input.len() {
                for c in 0..input.len() {
                    if r == row && c == col {
                        continue;
                    }
                }
            }
        }
    }
}
